     1: /* $Id: readaddr.c,v 1.1 2003/12/09 22:43:28 GrosbaJ Exp $ */
     2: #include <p18cxxx.h>
     3: #include <xlcd.h>
     4: 
     5: /*********************************************************************
     6: *       Function Name:  ReadAddrXLCD                                 *
     7: *       Return Value:   char: address from LCD controller            *
     8: *       Parameters:     void                                         *
     9: *       Description:    This routine reads an address byte from the  *
    10: *                       Hitachi HD44780 LCD controller. The user     *
    11: *                       must check to see if the LCD controller is   *
    12: *                       busy before calling this routine. The address*
    13: *                       is read from the character generator RAM or  *
    14: *                       the display data RAM depending on what the   *
    15: *                       previous SetxxRamAddr routine was called.    *
    16: *********************************************************************/
    17: unsigned char ReadAddrXLCD(void)
    18: {
    19:         char data;                      // Holds the data retrieved from the LCD
    20: 
    21: #ifdef BIT8                             // 8-bit interface
    22:         RW_PIN = 1;                     // Set control bits for the read
    23:         RS_PIN = 0;
    24:         DelayFor18TCY();
    25:         E_PIN = 1;                      // Clock data out of the LCD controller
    26:         DelayFor18TCY();
    27:         data = DATA_PORT;               // Save the data in the register
    28:         E_PIN = 0;
    29:         RW_PIN = 0;                     // Reset the control bits
    30: #else                                   // 4-bit interface
    31:         RW_PIN = 1;                     // Set control bits for the read
    32:         RS_PIN = 0;
    33:         DelayFor18TCY();
    34:         E_PIN = 1;                      // Clock data out of the LCD controller
    35:         DelayFor18TCY();
    36: #ifdef UPPER                            // Upper nibble interface
    37:         data = DATA_PORT&0xf0;          // Read the nibble into the upper nibble of data
    38: #else                                   // Lower nibble interface
    39:         data = (DATA_PORT<<4)&0xf0;     // Read the nibble into the upper nibble of data
    40: #endif
    41:         E_PIN = 0;                      // Reset the clock
    42:         DelayFor18TCY();
    43:         E_PIN = 1;                      // Clock out the lower nibble
    44:         DelayFor18TCY();
    45: #ifdef UPPER                            // Upper nibble interface
    46:         data |= (DATA_PORT>>4)&0x0f;    // Read the nibble into the lower nibble of data
    47: #else                                   // Lower nibble interface
    48:         data |= DATA_PORT&0x0f;         // Read the nibble into the lower nibble of data
    49: #endif
    50:         E_PIN = 0;
    51:         RW_PIN = 0;                     // Reset the control lines
    52: #endif
    53:         return (data&0x7f);             // Return the address, Mask off the busy bit
    54: }
    55: 
