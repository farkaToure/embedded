     1: /* $Id: setddram.c,v 1.1 2003/12/09 22:43:28 GrosbaJ Exp $ */
     2: #include <p18cxxx.h>
     3: #include <xlcd.h>
     4: 
     5: /********************************************************************
     6: *       Function Name:  SetDDRamAddr                                *
     7: *       Return Value:   void                                        *
     8: *       Parameters:     CGaddr: display data address                *
     9: *       Description:    This routine sets the display data address  *
    10: *                       of the Hitachi HD44780 LCD controller. The  *
    11: *                       user must check to see if the LCD controller*
    12: *                       is busy before calling this routine.        *
    13: ********************************************************************/
    14: void SetDDRamAddr(unsigned char DDaddr)
    15: {
    16: #ifdef BIT8                                     // 8-bit interface
    17:         TRIS_DATA_PORT = 0;                     // Make port output
    18:         DATA_PORT = DDaddr | 0b10000000;        // Write cmd and address to port
    19:         RW_PIN = 0;                             // Set the control bits
    20:         RS_PIN = 0;
    21:         DelayFor18TCY();
    22:         E_PIN = 1;                              // Clock the cmd and address in
    23:         DelayFor18TCY();
    24:         E_PIN = 0;
    25:         DelayFor18TCY();
    26:         TRIS_DATA_PORT = 0xff;                  // Make port input
    27: #else                                           // 4-bit interface
    28: #ifdef UPPER                                    // Upper nibble  interface
    29:         TRIS_DATA_PORT &= 0x0f;                 // Make port output
    30:         DATA_PORT &= 0x0f;                      // and write upper nibble
    31:         DATA_PORT |= ((DDaddr | 0b10000000) & 0xf0);
    32: #else                                           // Lower nibble interface
    33:         TRIS_DATA_PORT &= 0xf0;                 // Make port output
    34:         DATA_PORT &= 0xf0;                      // and write upper nibble
    35:         DATA_PORT |= (((DDaddr | 0b10000000)>>4) & 0x0f);
    36: #endif
    37:         RW_PIN = 0;                             // Set control bits
    38:         RS_PIN = 0;
    39:         DelayFor18TCY();
    40:         E_PIN = 1;                              // Clock the cmd and address in
    41:         DelayFor18TCY();
    42:         E_PIN = 0;
    43: #ifdef UPPER                                    // Upper nibble interface
    44:         DATA_PORT &= 0x0f;                      // Write lower nibble
    45:         DATA_PORT |= ((DDaddr<<4)&0xf0);
    46: #else                                           // Lower nibble interface
    47:         DATA_PORT &= 0xf0;                      // Write lower nibble
    48:         DATA_PORT |= (DDaddr&0x0f);
    49: #endif
    50:         DelayFor18TCY();
    51:         E_PIN = 1;                              // Clock the cmd and address in
    52:         DelayFor18TCY();
    53:         E_PIN = 0;
    54: #ifdef UPPER                                    // Upper nibble interface
    55:         TRIS_DATA_PORT |= 0xf0;                 // Make port input
    56: #else                                           // Lower nibble interface
    57:         TRIS_DATA_PORT |= 0x0f;                 // Make port input
    58: #endif
    59: #endif
    60:         return;
    61: }
    62: 
